<?xml version="1.0"?>

<document>
  <properties>
    <title>TODO</title>
    <author email="rleland@apache.org">Robert Leland</author>
    <author email="dgraham@apache.org">David Graham</author>
  </properties>

  <body>
    <section name="TODO list">
      <p>
        The following is a list of items that need to be completed in
        Validator.  Contributions are welcome! 
      </p>
    
    <subsection name="High priority"> 
      <ul>
      	<li>
      		Remove functionality deprecated in 1.1.0 release in 1.2.0 release.
      	</li>
       </ul>
    </subsection>
    
    <subsection name="Medium priority"> 
      <ul>
      	<li>
      		Change the validation.xml file semantics to match a more general "bean" validation usage.
      		Currently, the &lt;form-validation&gt;, &lt;formset&gt;, &lt;form&gt;, and &lt;field&gt; elements
      		require a form-centric view of validations.  Changing these to &lt;bean-validation&gt;, &lt;beans&gt;,
      		&lt;bean&gt;, and &lt;property&gt; respectively would allow Validator to be used more easily in
      		non-form based environments.
      	</li>
      	<li>
      	        Scenario one:
      		Replace the Jakarta ORO regex engine with the standard Java 1.4 engine.  Preliminary tests show a 
      		50% speed improvement using the standard engine.  This will remove the ORO dependency and
      		bring Validator in line with standard Java regular expressions.  However, this requires a move
      		to Java 1.4 as the base required Java version.  A good time for this move may be Validator 2.0 when
      		we also change the configuration file semantics.
      	</li>
      	<li>
      		Much more likely Scenario:
      		ORO provides a much richer interface to regular expression, such that we don't have
      		to worry about bit twiddling, this includes a pluggable regex engine. Jeffrey E Friedl states
      		in Mastering Regular Expressions 2ed, says that in speaking to the ORO developers that they
      		will likely develop an adapter to the Java 1.4 regex, See page 378. So we get use of ORO and the speed of 
      		Java 1.4 Regex engine. 
      	</li>
      </ul>
    </subsection>
    
    <subsection name="Low priority"> 
      <ul>
       </ul>
    </subsection>
</section>
<section name='Completed'>
    <subsection name='Since 1.1.0 Release'>
        <ul>
        	<li>
        	   Add javadoc to javascript, and use             
                  <a href="http://jsdoc.sf.net"> jsdoc</a> to process it.
        	</li>
        	<li>
        	   Ignore validation criteria when field is disabled for all field types.
        	</li>
        	<li>
        	  Add required check for single checkbox.
        	</li>
        	<li>
        	  Let max/min length also cover passwords fields. Don't use these for checking login pages,
        	  only when the user is modifying the password.
        	</li>
        	<li>
        	  Added Field.getArgs(String) to make it easier to retrieve all of the Args for a given validator.
        	</li>
        	<li>
              Modify javascript to honor datapattern option.
        	</li>
        	<li>
        	  Add ability of required to handle checkboxes, radio,select-one, and select-multiple field types.
        	</li>
        	<li>
        	  Add ability to use required condition on array types like checkboxes.
        	</li>
    </subsection>
    <subsection name='Since 1.0.2 Release'>
        <ul>
         	<li>
        		Move Digester rule configuration to XML file and remove ValidatorResourcesInitializer.
        		ValidatorResources now knows how to initialize itself.
        	</li>
        	<li>
        		Clean up scopes of methods and variables.
        	</li>
        	<li>
        		Make Arg system more flexible to allow any number of args in a message.
        	</li>
        	<li>
        		Validate validation.xml files while initializing a Validator to alert developers to configuration
        		errors.
        	</li>
        	<li>
        		Refactored <code>GenericValidator</code> methods into reusable objects.  These include:
        		CreditCardValidator, EmailValidator, DateValidator, and UrlValidator.
        	</li>
         </ul>
    </subsection>
</section>
<section name='Deprecated'>
    <subsection name='Since 1.0.2 Release'>
    	<p>See the javadoc for details and replacements.</p>
        <ul>
            <li>
        	     The &lt;arg0-3&gt; elements have been replaced with a single &lt;arg&gt; element
        	     with a new <code>position</code> attribute.  Setting position to 0 is the equivalent
        	     of an &lt;arg0&gt; element.  
        	</li>
        	<li>
        	     <code>Arg.getResource()</code>
        	</li>
        	<li>
        	     <code>CreditCardValidator.isValidPrefix()</code>
        	</li>
        	<li>
        	     <code>Field.ARG_DEFAULT</code>
        	</li>
        	<li>
        	     <code>Field.hDependencies</code>
        	</li>
        	<li>
        	     <code>Field.hArg0 - Field.hArg3</code>
        	</li>
        	<li>
        	     <code>Field.addArg0() - Field.addArg3()</code>
        	</li>
        	<li>
        	     <code>Field.getArg0() - Field.getArg3()</code>
        	</li>
        	<li>
        	     <code>Field.addVarParam()</code>
        	</li>
        	<li>
        	     <code>Field.process()</code>
        	</li>
        	<li>
        	     <code>Field.processMessageComponents()</code>
        	</li>
        	<li>
        	     <code>Field.getDependencies()</code>
        	</li>
        	<li>
        	     <code>Form.getFieldMap()</code>
        	</li>
        	<li>
        	     <code>Form.process()</code>
        	</li>
        	<li>
        	     <code>FormSet.addConstant()</code>
        	</li>
        	<li>
        	     <code>FormSet.addConstantParam()</code>
        	</li>
        	<li>
        	     <code>FormSet.getForm(Object)</code>
        	</li>
        	<li>
        	     <code>FormSet.process()</code>
        	</li>
        	<li>
        	     <code>GenericValidator.REGEXP_DELIM</code>
        	</li>
        	<li>
        	     <code>GenericValidator.validateCreditCardLuhnCheck()</code>
        	</li>
        	<li>
        	     <code>GenericValidator.validateCreditCardPrefixCheck()</code>
        	</li>
        	<li>
        	     <code>GenericValidator.getDelimittedRegExp()</code>
        	</li>
        	<li>
        	     <code>Validator.BEAN_KEY</code>
        	</li>
        	<li>
        	     <code>Validator.VALIDATOR_ACTION_KEY</code>
        	</li>
        	<li>
        	     <code>Validator.FIELD_KEY</code>
        	</li>
        	<li>
        	     <code>Validator.VALIDATOR_KEY</code>
        	</li>
        	<li>
        	     <code>Validator.LOCALE_KEY</code>
        	</li>
        	<li>
        	     <code>Validator.hResources</code>
        	</li>
        	<li>
        	     <code>Validator.addResource()</code>
        	</li>
        	<li>
        	     <code>Validator.getResource()</code>
        	</li>
        	<li>
        	     <code>ValidatorAction.process()</code>
        	</li>
        	<li>
        	     <code>ValidatorAction.getDependencies()</code>
        	</li>
        	<li>
        	     <code>ValidatorResources.put()</code>
        	</li>
        	<li>
        	     <code>ValidatorResources.addConstant()</code>
        	</li>
        	<li>
        	     <code>ValidatorResources.addConstantParam()</code>
        	</li>
        	<li>
        	     <code>ValidatorResources.get()</code>
        	</li>
        	<li>
        	     <code>ValidatorResources.processForms()</code>
        	</li>
        	<li>
        	     <code>ValidatorResourcesInitializer</code>
        	</li>
        	<li>
        	     <code>ValidatorResult.getValid()</code>
        	</li>
        	<li>
        	     <code>ValidatorResults.empty()</code>
        	</li>
        	<li>
        	     <code>ValidatorResults.get()</code>
        	</li>
        	<li>
        	     <code>ValidatorResults.properties()</code>
        	</li>
        	<li>
        	     <code>ValidatorUtil</code>
        	</li>
        </ul>
    </subsection>
</section>
<section name='Backwards Incompatible Changes'>
    <subsection name='Since 1.0.2 Release'>
        <ul>
        	<li>
        		&lt;msg&gt;'s name and key attributes are now required.  The Validator code was
        		enforcing this constraint so now it's formally defined in the DTD.
        	</li>
        </ul>
    </subsection>
</section>
<section name='Semantic Changes'>
    <subsection name='Since 1.0.2 Release'>
        <ul>	
        </ul>
    </subsection>
</section>
</body>
</document>

